{"version":3,"sources":["../../../node_modules/axis/axis/reset.styl","app.css","component/body.styl","../../../node_modules/rupture/rupture/index.styl","component/navbar.styl","../../../node_modules/axis/axis/utilities.styl","component/footer.styl","component/home.styl","../../../node_modules/axis/axis/ui.styl","../../../node_modules/axis/axis/typography.styl","component/blog.styl","component/sidebar.styl","component/notifications.styl","component/fontawesome.styl","app.styl"],"names":[],"mappings":"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","file":"app.css","sourcesContent":["// -----\n// Reset\n// -----\n\n// Global Reset\n// Based on [Eric Meyer's reset](http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/)\n// ported from Nib\n\nglobal-reset()\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td\n    reset-box-model()\n    reset-font()\n  body\n    reset-body()\n  ol, ul\n    list-style: none\n  table\n    reset-table()\n  caption, th, td\n    reset-table-cell()\n  a img\n    border: none\n\nnested-reset()\n  div, span, object, iframe, h1, h2, h3, h4, h5, h6, p,\n  pre, a, abbr, acronym, address, code, del, dfn, em, img,\n  dl, dt, dd, ol, ul, li, fieldset, form, label,\n  legend, caption, tbody, tfoot, thead, tr\n    reset-box-model()\n    reset-font()\n  table\n    reset-table()\n  caption, th, td\n    reset-table-cell()\n  a img\n    border: none\n\nreset-box-model()\n  margin: 0\n  padding: 0\n  border: 0\n  outline: 0\n\nreset-font()\n  font-weight: inherit\n  font-style: inherit\n  font-family: inherit\n  font-size: 100%\n  vertical-align: baseline\n\nreset-body()\n  line-height: 1\n  color: black\n  background: white\n\nreset-table()\n  border-collapse: separate\n  border-spacing: 0\n  vertical-align: middle\n\nreset-table-cell()\n  text-align: left\n  font-weight: normal\n  vertical-align: middle\n\nreset-html5()\n  article, aside, canvas, details, figcaption,\n  figure, footer, header, hgroup, menu, nav,\n  section, summary, main\n    reset-box-model()\n    display: block\n  audio, canvas, video\n    display inline-block\n    *display inline\n    *zoom 1\n  audio:not([controls]),[hidden]\n    display none\n\n// Mixin: Normalize CSS\n// Based on v3.0.1 https://github.com/necolas/normalize.css\n\nnormalize-css()\n  html\n    font-family: sans-serif\n    -ms-text-size-adjust: 100%\n    -webkit-text-size-adjust: 100%\n\n  body\n    margin: 0\n\n  article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary\n    display: block\n\n  audio, canvas, progress, video\n    display: inline-block\n    vertical-align: baseline\n\n  audio:not([controls])\n    display: none\n    height: 0\n\n  [hidden], template\n    display: none\n\n  a\n    background: transparent\n\n    &:active, &:hover\n      outline: 0\n\n  abbr[title]\n    border-bottom: 1px dotted\n\n  b, strong\n    font-weight: bold\n\n  dfn\n    font-style: italic\n\n  h1\n    font-size: 2em\n    margin: 0.67em 0\n\n  mark\n    background: #ff0\n    color: #000\n\n  small\n    font-size: 80%\n\n  sub, sup\n    font-size: 75%\n    line-height: 0\n    position: relative\n    vertical-align: baseline\n\n  sup\n    top: -0.5em\n\n  sub\n    bottom: -0.25em\n\n  img\n    border: 0\n\n  svg:not(:root)\n    overflow: hidden\n\n  figure\n    margin: 1em 40px\n\n  hr\n    -moz-box-sizing: content-box\n    box-sizing: content-box\n    height: 0\n\n  pre\n    overflow: auto\n\n  code, kbd, pre, samp\n    font-family: monospace, monospace\n    font-size: 1em\n\n  button, input, optgroup, select, textarea\n    color: inherit\n    font: inherit\n    margin: 0\n\n  button\n    overflow: visible\n\n  button, select\n    text-transform: none\n\n  button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]\n    -webkit-appearance: button\n    cursor: pointer\n\n  button[disabled], html input[disabled]\n    cursor: default\n\n  button::-moz-focus-inner, input::-moz-focus-inner\n    border: 0\n    padding: 0\n\n  input\n    line-height: normal\n\n  input[type=\"checkbox\"], input[type=\"radio\"]\n    box-sizing: border-box\n    padding: 0\n\n  input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button\n    height: auto\n\n  input[type=\"search\"]\n    -webkit-appearance: textfield\n    -moz-box-sizing: content-box\n    -webkit-box-sizing: content-box\n    box-sizing: content-box\n\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration\n    -webkit-appearance: none\n\n  fieldset\n    border: 1px solid #c0c0c0\n    margin: 0 2px\n    padding: 0.35em 0.625em 0.75em\n\n  legend\n    border: 0\n    padding: 0\n\n  textarea\n    overflow: auto\n\n  optgroup\n    font-weight: bold\n\n  table\n    border-collapse: collapse\n    border-spacing: 0\n\n  td, th\n    padding: 0\n\n// Mixin: Fluid Media\n// Makes your img, video, and iframe tags responsive to their parent container.\n\nfluid-media()\n  img,\n  video,\n  iframe\n    max-width: 100%\n    height: auto\n    border: 0\n    -ms-interpolation-mode: bicubic\n    display: block\n\n// Mixin: Border Box HTML\n// Add border box to every element in your project. Used in your project root.\n// http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n\nborder-box-html()\n  html\n    box-sizing: border-box\n\n  *,\n  *:before,\n  *:after\n    box-sizing: inherit\n\n// Mixin: Print Styles\n// Nice clean print styles so you don't have to worry about it.\n\nprint-styles()\n  @media print\n    body\n      width: 100% !important\n      margin: 0 !important\n      padding: 0 !important\n      font-size: 14pt\n      line-height: 1.45\n      font-family: Garamond, \"Times New Roman\", serif\n      color: #000\n      background: none\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6\n      page-break-after: avoid\n      font-family: \"Helvetica\", Arial, sans-serif\n\n    h1\n      font-size: 36pt\n      line-height: 1.25em\n\n    h2\n      font-size: 24pt\n      line-height: 1.25em\n\n    h3\n      font-size: 18pt\n      line-height: 1.25em\n\n    h4,\n    h5,\n    h6\n      font-size: 14pt\n      line-height: 1.25em\n\n    p,\n    h2,\n    h3\n      orphans: 3\n      widows: 3\n\n    code\n      font: 12pt Courier, $monospace\n\n    blockquote\n      margin: 1.2em\n      padding: 1em\n      font-size: 24pt\n      line-height: 1.45833333em\n      font-style: italic\n\n    hr\n      background-color: #ccc\n\n    img\n      float: left\n      margin: 1em 1.5em 1.5em 0\n      max-width: 100% !important\n\n    a img\n        border: none\n\n    a:link,\n    a:visited\n      background: transparent\n      font-weight: 700\n      text-decoration: underline\n      color: #333\n\n    a:link[href^=\"http://\"]:after,\n    a[href^=\"http://\"]:visited:after\n      content: \" (\" attr(href) \") \"\n      font-size: 90%\n\n    abbr[title]:after\n      content: \" (\" attr(title) \")\"\n\n    a[href^=\"http://\"]\n      color: #000\n\n    a[href$=\".jpg\"]:after,\n    a[href$=\".jpeg\"]:after,\n    a[href$=\".gif\"]:after,\n    a[href$=\".png\"]:after\n      content: \" (\" attr(href) \") \"\n      display: none\n\n    a[href^=\"#\"]:after, a[href^=\"javascript:\"]:after\n      content: \"\"\n\n    table\n      margin: 1px\n      text-align: left\n\n    th\n      border-bottom: 1px solid #333\n      font-weight: bold\n\n    td\n      border-bottom: 1px solid #333\n\n    th,\n    td\n      padding: 4px 10px 4px 0\n\n    tfoot\n      font-style: italic\n\n    caption\n      background: #fff\n      margin-bottom: 2em\n      text-align: left\n\n    thead\n      display: table-header-group\n\n    img,\n    tr\n      page-break-inside: avoid\n","html {\n  box-sizing: border-box;\n}\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  font-weight: inherit;\n  font-style: inherit;\n  font-family: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\nbody {\n  line-height: 1;\n  color: #222;\n  background: #fff;\n}\nol,\nul {\n  list-style: none;\n}\ntable {\n  border-collapse: separate;\n  border-spacing: 0;\n  vertical-align: middle;\n}\ncaption,\nth,\ntd {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle;\n}\na img {\n  border: none;\n}\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\nbody {\n  margin: 0;\n}\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nnav,\nsection,\nsummary {\n  display: block;\n}\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline;\n}\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n[hidden],\ntemplate {\n  display: none;\n}\na {\n  background: transparent;\n}\na:active,\na:hover {\n  outline: 0;\n}\nabbr[title] {\n  border-bottom: 1px dotted;\n}\nb,\nstrong {\n  font-weight: bold;\n}\ndfn {\n  font-style: italic;\n}\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\nmark {\n  background: #ff0;\n  color: #000;\n}\nsmall {\n  font-size: 80%;\n}\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsup {\n  top: -0.5em;\n}\nsub {\n  bottom: -0.25em;\n}\nimg {\n  border: 0;\n}\nsvg:not(:root) {\n  overflow: hidden;\n}\nfigure {\n  margin: 1em 40px;\n}\nhr {\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  height: 0;\n}\npre {\n  overflow: auto;\n}\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\nbutton {\n  overflow: visible;\n}\nbutton,\nselect {\n  text-transform: none;\n}\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer;\n}\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\ninput {\n  line-height: normal;\n}\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  padding: 0;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box;\n  box-sizing: content-box;\n}\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\nlegend {\n  border: 0;\n  padding: 0;\n}\ntextarea {\n  overflow: auto;\n}\noptgroup {\n  font-weight: bold;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ntd,\nth {\n  padding: 0;\n}\n@media print {\n  body {\n    width: 100% !important;\n    margin: 0 !important;\n    padding: 0 !important;\n    font-size: 14pt;\n    line-height: 1.45;\n    font-family: Garamond, \"Times New Roman\", serif;\n    color: #000;\n    background: none;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    page-break-after: avoid;\n    font-family: \"Helvetica\", Arial, sans-serif;\n  }\n  h1 {\n    font-size: 36pt;\n    line-height: 1.25em;\n  }\n  h2 {\n    font-size: 24pt;\n    line-height: 1.25em;\n  }\n  h3 {\n    font-size: 18pt;\n    line-height: 1.25em;\n  }\n  h4,\n  h5,\n  h6 {\n    font-size: 14pt;\n    line-height: 1.25em;\n  }\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3;\n  }\n  code {\n    font: 12pt Courier, 'Bitstream Vera Sans Mono', Consolas, Courier, monospace;\n  }\n  blockquote {\n    margin: 1.2em;\n    padding: 1em;\n    font-size: 24pt;\n    line-height: 1.45833333em;\n    font-style: italic;\n  }\n  hr {\n    background-color: #ccc;\n  }\n  img {\n    float: left;\n    margin: 1em 1.5em 1.5em 0;\n    max-width: 100% !important;\n  }\n  a img {\n    border: none;\n  }\n  a:link,\n  a:visited {\n    background: transparent;\n    font-weight: 700;\n    text-decoration: underline;\n    color: #333;\n  }\n  a:link[href^=\"http://\"]:after,\n  a[href^=\"http://\"]:visited:after {\n    content: \" (\" attr(href) \") \";\n    font-size: 90%;\n  }\n  abbr[title]:after {\n    content: \" (\" attr(title) \")\";\n  }\n  a[href^=\"http://\"] {\n    color: #000;\n  }\n  a[href$=\".jpg\"]:after,\n  a[href$=\".jpeg\"]:after,\n  a[href$=\".gif\"]:after,\n  a[href$=\".png\"]:after {\n    content: \" (\" attr(href) \") \";\n    display: none;\n  }\n  a[href^=\"#\"]:after,\n  a[href^=\"javascript:\"]:after {\n    content: \"\";\n  }\n  table {\n    margin: 1px;\n    text-align: left;\n  }\n  th {\n    border-bottom: 1px solid #333;\n    font-weight: bold;\n  }\n  td {\n    border-bottom: 1px solid #333;\n  }\n  th,\n  td {\n    padding: 4px 10px 4px 0;\n  }\n  tfoot {\n    font-style: italic;\n  }\n  caption {\n    background: #fff;\n    margin-bottom: 2em;\n    text-align: left;\n  }\n  thead {\n    display: table-header-group;\n  }\n  img,\n  tr {\n    page-break-inside: avoid;\n  }\n}\nbody {\n  background: url(\"/images/bg.jpg\") no-repeat center center fixed;\n  background-size: cover;\n  font-family: 'Roboto Mono', monospace;\n  color: #222;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-bottom: 0.5rem;\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.1;\n  color: inherit;\n}\nh1 {\n  font-size: 2.5rem;\n}\nh2 {\n  font-size: 2rem;\n}\nh3 {\n  font-size: 1.75rem;\n}\nh4 {\n  font-size: 1.5rem;\n}\nh5 {\n  font-size: 1.25rem;\n}\nh6 {\n  font-size: 1rem;\n}\nem {\n  font-style: italic;\n}\nstrong {\n  font-weight: 500;\n}\nsmall {\n  font-size: 75%;\n}\na {\n  color: inherit;\n}\n.title {\n  margin-bottom: 1.5rem;\n}\n.title h4 {\n  margin: 1.14rem 0 0 0;\n}\n.title p {\n  margin: 0;\n}\na {\n  text-decoration: none;\n}\nhr {\n  border: 0;\n  border-top: 1px solid #b6b6b6;\n  width: 100%;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}\n.container {\n  display: flex;\n  flex-flow: row wrap;\n  max-width: 1140px;\n  margin-left: auto;\n  margin-right: auto;\n  *zoom: 1;\n}\n.container:before {\n  content: '';\n  display: table;\n}\n.container:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n.row {\n  *zoom: 1;\n  flex-flow: row wrap;\n  display: flex;\n}\n.row:before {\n  content: '';\n  display: table;\n}\n.row:after {\n  content: '';\n  display: table;\n  clear: both;\n}\n.full {\n  flex: 0 0 auto;\n  width: calc(99.9% * 1 - (15px - 15px * 1));\n}\n.full:nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\n.full:last-child {\n  margin-right: 0;\n}\n.full:nth-child(undefinedn) {\n  margin-right: 0;\n  margin-left: auto;\n}\n.third {\n  flex: 0 0 auto;\n  width: calc(99.9% * 1/3 - (15px - 15px * 1/3));\n}\n.third:nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\n.third:last-child {\n  margin-right: 0;\n}\n.third:nth-child(3n) {\n  margin-right: 0;\n  margin-left: auto;\n}\n@media only screen and (max-width: 450px) {\n  .third {\n    flex: 0 0 auto;\n    width: calc(99.9% * 1 - (15px - 15px * 1));\n  }\n  .third:nth-child(1n) {\n    margin-right: 15px;\n    margin-left: 0;\n  }\n  .third:last-child {\n    margin-right: 0;\n  }\n  .third:nth-child(1n) {\n    margin-right: 0;\n    margin-left: auto;\n  }\n}\n@media only screen and (min-width: 450px) and (max-width: 1050px) {\n  .third {\n    flex: 0 0 auto;\n    width: calc(99.9% * 1/2 - (15px - 15px * 1/2));\n  }\n  .third:nth-child(1n) {\n    margin-right: 15px;\n    margin-left: 0;\n  }\n  .third:last-child {\n    margin-right: 0;\n  }\n  .third:nth-child(2n) {\n    margin-right: 0;\n    margin-left: auto;\n  }\n}\n.fourth {\n  flex: 0 0 auto;\n  width: calc(99.9% * 1/4 - (15px - 15px * 1/4));\n}\n.fourth:nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\n.fourth:last-child {\n  margin-right: 0;\n}\n.fourth:nth-child(4n) {\n  margin-right: 0;\n  margin-left: auto;\n}\n@media only screen and (max-width: 450px) {\n  .fourth {\n    flex: 0 0 auto;\n    width: calc(99.9% * 1 - (15px - 15px * 1));\n  }\n  .fourth:nth-child(1n) {\n    margin-right: 15px;\n    margin-left: 0;\n  }\n  .fourth:last-child {\n    margin-right: 0;\n  }\n  .fourth:nth-child(1n) {\n    margin-right: 0;\n    margin-left: auto;\n  }\n}\n@media only screen and (min-width: 450px) and (max-width: 1050px) {\n  .fourth {\n    flex: 0 0 auto;\n    width: calc(99.9% * 1/2 - (15px - 15px * 1/2));\n  }\n  .fourth:nth-child(1n) {\n    margin-right: 15px;\n    margin-left: 0;\n  }\n  .fourth:last-child {\n    margin-right: 0;\n  }\n  .fourth:nth-child(2n) {\n    margin-right: 0;\n    margin-left: auto;\n  }\n}\n.eight {\n  flex: 0 0 auto;\n  width: calc(99.9% * 1/8 - (15px - 15px * 1/8));\n}\n.eight:nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\n.eight:last-child {\n  margin-right: 0;\n}\n.eight:nth-child(8n) {\n  margin-right: 0;\n  margin-left: auto;\n}\n.box {\n  margin-top: 10px;\n  background-color: rgba(255,255,255,0.9);\n  box-shadow: 1px 1.732px 5px 0px rgba(4,5,6,0.2);\n  padding: 15px;\n  word-wrap: break-word;\n}\n.blueBg {\n  background-color: rgba(0,116,217,0.9);\n}\n.whiteText {\n  color: #fff;\n}\n.center {\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n}\n.pagination li {\n  display: inline;\n  padding: 0.5rem 0.75rem;\n  margin-left: -1px;\n  line-height: 1.5;\n  color: #0074d9;\n  text-decoration: none;\n  border: 1px solid #aaa;\n  background-color: #fff;\n}\n.pagination li.active {\n  color: #fff;\n  cursor: default;\n  background-color: #0074d9;\n  border-color: #0074d9;\n}\n.pagination li.disabled {\n  color: #aaa;\n  cursor: not-allowed;\n}\n.back-to-top {\n  position: fixed;\n  bottom: 1em;\n  right: 1em;\n  display: inline-block;\n  color: rgba(0,116,217,0.9);\n  font-size: 1.5em;\n}\n@media only screen and (max-width: 450px) {\n  .back-to-top {\n    bottom: 0.5em;\n    right: 0.5em;\n  }\n}\n.back-to-top:hover {\n  cursor: pointer;\n  color: #212121;\n}\n.navbar {\n  z-index: 1000;\n  line-height: 60px;\n  text-align: center;\n  padding: 0px;\n  width: 100%;\n}\nnav {\n  flex: 0 0 auto;\n  width: calc(99.9% * 1/4 - (15px - 15px * 1/4));\n}\nnav:nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\nnav:last-child {\n  margin-right: 0;\n}\nnav:nth-child(4n) {\n  margin-right: 0;\n  margin-left: auto;\n}\nnav:nth-child(2) {\n  flex: 0 0 auto;\n  width: calc(99.9% * 2/4 - (15px - 15px * 2/4));\n}\nnav:nth-child(2):nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\nnav:nth-child(2):last-child {\n  margin-right: 0;\n}\nnav:nth-child(2):nth-child(4n) {\n  margin-right: 0;\n  margin-left: auto;\n}\nnav:nth-child(2) a:hover {\n  border-bottom: 2px solid;\n  border-color: #1976d2;\n  transition: all linear 0.3s;\n  color: #333;\n}\nnav a {\n  color: #333;\n  text-transform: uppercase;\n  font-weight: 600;\n}\nnav .fa {\n  font-size: 1.5em;\n}\nnav #nav-trigger {\n  display: none;\n}\nnav label[for=\"nav-trigger\"] {\n  display: none;\n}\nnav ul {\n  display: inline-flex;\n  margin: 0;\n}\nnav ul li:hover ul {\n  display: block;\n}\nnav ul li ul {\n  display: none;\n  position: absolute;\n  padding: 10px;\n  background-color: #fff;\n  z-index: 1000;\n}\nnav ul li>a {\n  margin: 0 10px;\n  border-bottom: 2px solid;\n  border-color: transparent;\n  line-height: 20px;\n}\nnav ul li>a.active {\n  border-bottom: 2px solid;\n  border-color: #2196f3;\n}\n@media only screen and (max-width: 1000px) {\n  nav {\n    flex: 0 0 auto !important;\n    width: calc(99.9% * 1 - (15px - 15px * 1)) !important;\n  }\n  nav:nth-child(1n) {\n    margin-right: 15px !important;\n    margin-left: 0 !important;\n  }\n  nav:last-child {\n    margin-right: 0 !important;\n  }\n  nav:nth-child(undefinedn) {\n    margin-right: 0 !important;\n    margin-left: auto !important;\n  }\n  nav:last-child {\n    display: none;\n  }\n  nav:nth-child(2) {\n    display: none;\n  }\n  nav label[for=\"nav-trigger\"] {\n    display: block;\n    position: absolute;\n    top: 10px;\n    right: 15px;\n    cursor: pointer;\n  }\n  nav ul {\n    flex-wrap: wrap;\n    padding: 0;\n    display: block;\n    line-height: 40px;\n  }\n  nav ul li ul {\n    position: inherit;\n    background-color: #2196f3;\n  }\n  nav ul li ul a {\n    color: #fff;\n  }\n}\n.navimg {\n  border-radius: 50%;\n  height: 40px;\n}\nfooter {\n  z-index: -100;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  text-align: center;\n  margin-bottom: 10px;\n}\nfooter .fourth {\n  text-align: left;\n}\nfooter .fourth ul {\n  padding: 10px 10px 0 10px;\n  margin-left: 0px;\n  line-height: 2;\n}\nfooter .fourth ul a {\n  color: #fff;\n  font-weight: 600;\n}\n.footerInfo {\n  padding-top: 10px;\n  text-transform: uppercase;\n  font-weight: 800;\n}\n.footerInfo a {\n  color: inherit;\n}\n.hero h1 {\n  margin: 2.1rem 0 0 0;\n  font-weight: bold;\n}\n.hero h5 {\n  margin: 0 0 1rem 0;\n}\n.hero .button {\n  background-color: #222;\n  color: #fff;\n  padding: 15px;\n  display: inline-block;\n  width: 150px;\n}\n.whatDo {\n  padding: 15px;\n}\n.whatDo:hover {\n  transform: scale(1.1);\n  transition: transform 0.2s linear;\n}\n.whatDo p {\n  color: #727272;\n}\n.whatDo i {\n  color: #0074d9;\n}\nfigure {\n  display: inline-block;\n}\nfigure img {\n  display: block;\n  padding: 4px;\n  border-radius: 3px;\n  border: 1px solid rgba(0,116,217,0.6);\n}\nfigure figcaption {\n  padding: 10px 0;\n  text-align: center;\n  font-style: italic;\n}\narticle:target {\n  border-left: 4px solid #0074d9;\n  border-right: 4px solid #0074d9;\n}\narticle img {\n  height: 200px;\n  object-fit: cover;\n  min-width: 100%;\n}\narticle header {\n  border-bottom: 1px solid #aaa;\n  margin-bottom: 30px;\n  padding-bottom: 15px;\n}\narticle li {\n  display: inline;\n}\n.sidebar {\n  flex: 0 0 auto;\n  width: calc(99.9% * 3/12 - (15px - 15px * 3/12));\n  height: 100%;\n}\n.sidebar:nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\n.sidebar:last-child {\n  margin-right: 0;\n}\n.sidebar:nth-child(12n) {\n  margin-right: 0;\n  margin-left: auto;\n}\n.sideContent {\n  flex: 0 0 auto;\n  width: calc(99.9% * 9/12 - (15px - 15px * 9/12));\n}\n.sideContent:nth-child(1n) {\n  margin-right: 15px;\n  margin-left: 0;\n}\n.sideContent:last-child {\n  margin-right: 0;\n}\n.sideContent:nth-child(12n) {\n  margin-right: 0;\n  margin-left: auto;\n}\n.flashmessage {\n  color: #fff;\n  padding: 15px;\n  position: fixed;\n  _position: absolute;\n  text-shadow: 0 1px 0 rgba(0,0,0,0.5);\n  z-index: 10000;\n  right: 0px;\n  bottom: 30px;\n}\n.info {\n  background-color: #4ea5cd;\n}\n.error {\n  background-color: #de4343;\n}\n.warning {\n  background-color: #eaaf51;\n}\n.success {\n  background-color: #61b832;\n}\n.flashmessage h3 {\n  margin: 0 0 5px 0;\n}\n.flashmessage p {\n  margin: 0;\n}\nnav .fa-codepen {\n  color: #000;\n}\nnav .fa-linkedin {\n  color: #0077b5;\n}\nnav .fa-github {\n  color: #333;\n}\nnav .fa:hover {\n  transform: scale(1.5);\n  transition: transform 0.2s linear;\n}\n@import url(\"https://fonts.googleapis.com/css?family=RobotoMono\");\n","body {\r\n  background: url(/images/bg.jpg) no-repeat center center fixed; \r\n  background-size: cover;\r\n  font-family: 'Roboto Mono', monospace;\r\n  color: $black;\r\n}\r\nh1, h2, h3, h4, h5, h6 {\r\n    margin-bottom: .5rem;\r\n    font-family: inherit;\r\n    font-weight: 500;\r\n    line-height: 1.1;\r\n    color: inherit;\r\n    //text-transform: uppercase;\r\n}\r\nh1 {\r\n    font-size: 2.5rem;\r\n}\r\nh2 {\r\n    font-size: 2rem;\r\n}\r\nh3 {\r\n    font-size: 1.75rem;\r\n}\r\nh4 {\r\n    font-size: 1.5rem;\r\n}\r\nh5 {\r\n    font-size: 1.25rem;\r\n}\r\nh6 {\r\n    font-size: 1rem;\r\n}\r\nem {\r\n  font-style: italic;\r\n}\r\nstrong {\r\n  font-weight: 500;\r\n}\r\nsmall {\r\n  font-size: 75%;\r\n}\r\na {\r\n  color: inherit;\r\n}\r\n.title {\r\n  margin-bottom: 1.5rem;\r\n  h4 {\r\n    margin: 1.14rem 0 0 0;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }\r\n}\r\na {\r\n  text-decoration: none;\r\n}\r\nhr {\r\n  border: 0;\r\n\tborder-top: 1px solid #B6B6B6;\r\n  width: 100%;\r\n}\r\nimg {\r\n    max-width: 100%;\r\n    height: auto;\r\n}\r\n.container {\r\n  lost-center: 1140px;\r\n  lost-utility: clearfix;\r\n}\r\n.row {\r\n  lost-utility: clearfix;\r\n  flex-flow: row wrap;\r\n  display: flex;\r\n}\r\n.full {\r\n  lost-column: 1;\r\n}\r\n.third {\r\n  lost-column: 1/3;\r\n  lost-column-cycle: 3;\r\n  +mobile(){\r\n    lost-column: 1;\r\n    lost-column-cycle: 1;\r\n  }\r\n  +tablet(){\r\n    lost-column: 1/2;\r\n    lost-column-cycle: 2;\r\n  }\r\n}\r\n.fourth {\r\n  lost-column: 1/4;\r\n  lost-column-cycle: 4;\r\n  +mobile(){\r\n    lost-column: 1;\r\n    lost-column-cycle: 1;\r\n  }\r\n  +tablet(){\r\n    lost-column: 1/2;\r\n    lost-column-cycle: 2;\r\n  }\r\n}\r\n.eight {\r\n  lost-column: 1/8;\r\n}\r\n.box {\r\n  margin-top: 10px;\r\n  background-color: $whitetrans;\r\n  box-shadow: 1px 1.732px 5px 0px rgba(4,5,6,.2);\r\n  padding: 15px;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.blueBg {\r\n  background-color: $bluetrans;\r\n}\r\n.whiteText {\r\n  color: white;\r\n}\r\n\r\n.center {\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.pagination li{\r\n    display: inline;\r\n    padding: .5rem .75rem;\r\n    margin-left: -1px;\r\n    line-height: 1.5;\r\n    color: $blue;\r\n    text-decoration: none;\r\n    border: 1px solid $gray;\r\n    background-color: $white;\r\n    &.active {\r\n      color: #fff;\r\n      cursor: default;\r\n      background-color: $blue;\r\n      border-color: $blue;\r\n    }\r\n    &.disabled {\r\n      color: $gray;\r\n      cursor: not-allowed;\r\n    }\r\n}\r\n.back-to-top {\r\n  +mobile() {\r\n    bottom: 0.5em;\r\n    right: 0.5em;\r\n  }\r\n  position: fixed;\r\n  bottom: 1em;\r\n  right: 1em;\r\n  display: inline-block;  \r\n  color: $bluetrans;\r\n  font-size: 1.5em;\r\n  &:hover{\r\n    cursor: pointer;\r\n    color: #212121;\r\n  }\r\n}\r\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n",".navbar {\r\n\tz-index: 1000;\r\n\tline-height: 60px;\r\n  \ttext-align: center;\r\n\tpadding: 0px;\r\n\twidth:100%;\r\n}\r\nnav {\r\n\tlost-column: 1/4;\r\n    &:nth-child(2) {\r\n\t\tlost-column: 2/4;\r\n\t\ta:hover {\r\n\t\t\tborder-bottom: 2px solid;\r\n\t\t\tborder-color: #1976D2;\r\n\t\t\ttransition: all linear 0.3s;\r\n\t\t\tcolor: #333;\r\n\t\t}\t\r\n\t}\r\n\ta {\r\n\t\t\tcolor: #333;\r\n\t\t\ttext-transform: uppercase;\r\n\t\t\tfont-weight: 600;\r\n\t}\r\n\t.fa {\r\n\t\tfont-size: 1.5em;\r\n\t}\r\n\t#nav-trigger {\r\n\t\t\tdisplay: none;\r\n\t}\r\n\tlabel[for=\"nav-trigger\"] {\r\n\t\t\tdisplay: none;\r\n\t}\r\n\tul {\r\n\t\tdisplay: inline-flex;\r\n\t\tmargin: 0;\r\n\t\tli {\r\n\t\t\t&:hover ul{\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t\tul {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tpadding: 10px;\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\tz-index: 1000;\r\n\t\t\t}\r\n\t\t\t&>a {\r\n\t\t\t\tmargin: 0 10px;\r\n\t\t\t\tborder-bottom: 2px solid;\r\n\t\t\t\tborder-color: transparent;\r\n\t\t\t\tline-height: 20px;\r\n\t\t\t\t&.active {\r\n\t\t\t\t\tborder-bottom: 2px solid;\r\n\t\t\t\t\tborder-color: #2196F3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t+below(1000px){\r\n\t\tlost-column: 1 !important;\r\n\t\t&:last-child {\r\n\t\t\tdisplay:none;\r\n\t\t}\r\n\t\t&:nth-child(2) {\r\n\t\t\tdisplay:none;\r\n\t\t}\r\n\t\tlabel[for=\"nav-trigger\"] {\r\n\t\t\tdisplay: block;\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 10px;\r\n\t\t\tright: 15px;\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t\tul {\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tpadding: 0;\r\n\t\t\tdisplay: block;\r\n\t\t\tline-height: 40px;\r\n\t\t\tli ul {\r\n\t\t\t\tposition: inherit;\r\n\t\t\t\tbackground-color: #2196F3;\r\n\t\t\t\ta {\r\n\t\t\t\t\tcolor:#fff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n.navimg {\r\n\tborder-radius: 50%;\r\n\theight: 40px;\r\n}","// ---------\n// Utilities\n// ---------\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  transition: arguments\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alias: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopen-type-ligatures()\n  font-feature-settings: \"liga\", \"dlig\"\n\n// Mixin: Rounded\n//\n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n//\n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n\n// Mixin: Triangle\n//\n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n//\n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle($direction = 'up', $size = 10px, $color = #000)\n  width: 0\n  height: 0\n  if $direction == 'up'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-bottom: $size solid $color\n  else if $direction == 'down'\n    border-left: $size solid transparent\n    border-right: $size solid transparent\n    border-top: $size solid $color\n  else if $direction == 'left'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-right: $size solid $color\n  else if $direction == 'right'\n    border-top: $size solid transparent\n    border-bottom: $size solid transparent\n    border-left: $size solid $color\n\n// Mixin: Debug\n//\n// Debugging tool - adds a border to the current element, its children,\n// grandchildren, etc so you can see what's up – great for precise layout\n// tweaks.  It will also add flags if you made mistakes like put in inline\n// styles, forgot an alt on an image, left the alt blank, etc. Not to be used\n// in production, obviously.\n//\n// via dbox: http://codepen.io/dbox/pen/GJZzYo?editors=110\n\ndebug()\n  border 1px solid MediumPurple\n  > *\n    border 1px solid DarkKhaki\n  > * > *\n    border 1px solid MediumTurquoise\n  > * > * > *\n    border 1px solid LightSlateGray\n  > * > * > * > *\n    border 1px solid LightBlue\n  > * > * > * > * > *\n    border 1px solid MediumSlateBlue\n  > * > * > * > * > * > *\n    border 1px solid DeepSkyBlue\n  > * > * > * > * > * > * > *\n    border 1px solid DarkSeaGreen\n\n  img\n    border: 1px solid #f00\n    -webkit-filter: hue-rotate(330deg) contrast(.75) saturate(6)\n    filter: hue-rotate(330deg) contrast(.75) saturate(6)\n\n  img[alt]\n    border: 1px solid LimeGreen\n    -webkit-filter: none\n    filter: none\n\n  img[alt=\"\"]\n    border: 1px solid gold\n    -webkit-filter: contrast(1) saturate(2)\n    filter: contrast(1) saturate(2)\n\n  a\n    background: rgba(#f00, .1)\n    border: 1px solid #f00\n\n  a[title]\n    background: none\n    border-color: LimeGreen\n\n  style\n    border: block\n\n  [style], style, [class=\"\"], [id=\"\"], a[href=\"#\"]\n    background: rgba(yellow, .2)\n    border: 1px solid gold\n\n// Block Mixin: Quantity Queries\n//\n// Set rules for a selector based on a specific sibling count.\n// via: https://github.com/pascalduez/postcss-quantity-queries\n//\n// ex. +quantity-at-least(6)\n// ex. +quantity-at-most(12, div)\n// ex. +quantity-between(0, 8, span)\n// ex. +quantity-exactly(5)\n\nquantity-at-least($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(n+{$count})\n  & > {$selector}:nth-last-child(n+{$count}) ~ {$selector}\n    {block}\n\nquantity-at-most($count = 4, $selector = li)\n  & > {$selector}:nth-last-child(-n+{$count}):first-child\n  & > {$selector}:nth-last-child(-n+{$count}):first-child ~ {$selector}\n    {block}\n\nquantity-between($start = 0, $end = 10, $selector = li)\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child\n  & > {$selector}:nth-last-child(n+{$start}):nth-last-child(-n+{$end}):first-child ~ {$selector}\n    {block}\n\nquantity-exactly($count = 4, $selector = li)\n  & > {$selector}:nth-last-child({$count}):first-child\n  & > {$selector}:nth-last-child({$count}):first-child ~ {$selector}\n    {block}\n\n// Function: Rem Calculator\n//\n// Calculates and returns the rem value based on px input. Default base font\n// size is 16px, but can be changed with base-font-size.\n//\n// ex       : rem(30px) or rem(30)\n// returns  : 1.875rem\n\nrem($value)\n  $base-font-size ?= 16px\n  $type = unit($value)\n  if $type == px\n    return unit($value / $base-font-size, 'rem')\n  else\n    return unit($value, $type)\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\n$ease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\n$ease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\n$ease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\n$ease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\n$ease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\n$ease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\n$ease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\n$ease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\n$ease-in-swift =     cubic-bezier(0.900,  0.000, 0.450, 1.000)\n\n// ease-out\n$ease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\n$ease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\n$ease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\n$ease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\n$ease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\n$ease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\n$ease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\n$ease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\n$ease-out-swift =    cubic-bezier(0.550,  0.000, 0.100, 1.000)\n\n// ease-in-out\n$ease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\n$ease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\n$ease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\n$ease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\n$ease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\n$ease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\n$ease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\n$ease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\n$ease-in-out-swift = cubic-bezier(0.900,  0.000, 0.100, 1.000)\n","footer {\r\n      z-index: -100;\r\n      align-items: center;\r\n      justify-content: center;\r\n      display:flex;\r\n      text-align: center;\r\n      margin-bottom: 10px;\r\n      .fourth {\r\n            text-align: left;\r\n            ul{\r\n                  padding: 10px 10px 0 10px;\r\n                  margin-left: 0px;\r\n                  line-height: 2;\r\n                  a {\r\n                        color: white;\r\n                        font-weight: 600;\r\n                  }\r\n            }\r\n      }\r\n\r\n}\r\n.footerInfo {\r\n      padding-top: 10px;\r\n      text-transform: uppercase;\r\n      font-weight: 800;\r\n      a {\r\n            color: inherit;\r\n      }\r\n}",".hero { \r\n    h1 {\r\n        margin: 2.1rem 0 0 0;\r\n        font-weight: bold;\r\n   } \r\n    h5 {\r\n        margin: 0 0 1rem 0;\r\n    }\r\n    .button {\r\n        \r\n        background-color: $black;\r\n        color: white;\r\n        padding: 15px;\r\n        display: inline-block;\r\n        width: 150px;\r\n    }\r\n}\r\n.whatDo {\r\n    padding: 15px;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        transition: transform .2s linear;\r\n        }\r\n    p {\r\n        color: $darkgray;\r\n    }\r\n    i {\r\n        color: $blue;\r\n    }\r\n}\r\nfigure {\r\n    figure();\r\n}","// --\n// UI\n// --\n\n// Mixin: Area\n//\n// Just a nice little area for you to put content in. Rounded corners, box with\n// light grey background by default. You can pass it a different color if you'd\n// like.\n//\n// ex. area()\n// ex. area: red // <-- not recommended\n\narea($color = #F5F5F5)\n  box-shadow: inset 0 0 6px rgba(#000,.05)\n  background-color: $color\n  padding: 15px\n  border-radius: 4px\n  margin: 20px 0\n\n// Mixin: Notice\n//\n// A notice for you. Best used for flash alerts, this was originally an internal\n// mixin, but you can use it if you'd like. Give it a color and a width and it\n// will output a nice lightly gradiented box for your notice to reside in.\n//\n// ex. notice()\n// ex. notice: 500px blue\n\nnotice($width = false, $color = #EEEEEE, $padding = 10px)\n  group()\n  gradient($color, 3%)\n  border-radius: 5px\n  padding: $padding\n  border: 1px solid darken($color, 10%)\n  box-shadow: 1px 1px 3px rgba(#000,.05)\n  position: relative\n  width: $width if $width\n\n// Mixin: Flash\n//\n// This is really great for rails flash messages, or really any little\n// notifications like 'logged in!', 'logged out!', or 'errarrrr!'. Takes one of\n// four types and colors them nicely for you - notice, success, warning, or\n// error. Defaults to notice.\n//\n// ex. flash()\n// ex. flash: 'error'\n\nflash($type = 'notice')\n  if $type == 'notice'\n    notice($color: #6CC5FA)\n    color: #fff\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#000,.2)\n  if $type == 'success'\n    notice($color: #7BDEA3)\n    color: #fff\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#000,.2)\n  if $type == 'warning'\n    notice($color: #FAE677)\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#fff,.2)\n  if $type == 'error'\n    notice($color: #E77C70)\n    color: #fff\n    font-weight: bold\n    text-shadow: 1px 1px 1px rgba(#000,.2)\n\n// Mixin: Breadcrumb\n//\n// Lay this one down on a list and it will turn the list into a breadcrumb-y\n// thing. By default separates with a slash, but you can feed it any character.\n// Second param is spacing between the list items, and the third is the color of\n// the divider. All are optional.\n//\n// ex. breadcrumb()\n// ex. breadcrumb: '>'\n// ex. breadcrumb: \"-\" 25px red\n// ex. breadcrumb \"~\" 40px\n\nbreadcrumb($character = \"/\", $spacing = 10px, $divider-color = #CDCDCD)\n  inline-list: $spacing\n\n  li:not(:last-child):after\n    content: $character\n    margin-left: $spacing\n    color: $divider-color\n\n// Mixin: Bubble\n//\n// If you're anything like me, you always seem to find your designers putting\n// little bubbles in things. This mixin takes care of that problem, and makes a\n// nice bubble with 100% css. All parameters optional - accepts width, pointer\n// position (left, center, or right), and a color.\n//\n// ex. bubble()\n// ex. bubble: top center #57777E\n// ex. bubble: bottom right #5740A1 500px\n// ex. bubble: right top #5740A1 500px\n\nbubble($pos0 = left, $pos1 = false, $color = #EEEEEE, $width = false, $triangle-size = 10px, $side-distance = 15px, $padding = 10px, pointer = false, $triangle-color = darken($color, 3%), $triangle-border-color = darken($triangle-color, 10%))\n\n  // use named argument 'pointer' as $pos0 arg (to preserve old bubble api)\n  $border-width = 1px\n  $sqrt2 = 1.3\n  $distance-y-shadow = ($side-distance - $border-width)\n  $distance-x-shadow = ($side-distance - $border-width)\n  $margin-left-shadow = auto\n  $margin-left = auto\n  $margin-top-shadow = auto\n  $margin-top = auto\n  if pointer\n    $pos1 = pointer\n    $pos0 = bottom\n  // if no $pos1 is given, shift args and assume 'bottom $pos0'\n  if $pos1 is false\n    $pos1 = $pos0\n    $pos0 = bottom\n  else if $pos1 is a 'color'\n    $width = $color\n    $color = $pos1\n    $pos1 = $pos0\n    $pos0 = bottom\n\n  notice: $width $color $padding\n\n  if $pos0 is top\n    $direction-triangle = up\n    $position-y = top\n    $distance-y = -($triangle-size)\n    $distance-y-shadow = -($triangle-size + $border-width * $sqrt2)\n  else if $pos0 is bottom\n    $direction-triangle = down\n    $position-y = bottom\n    $distance-y = -($triangle-size)\n    $distance-y-shadow = -($triangle-size + $border-width * $sqrt2)\n  else if $pos0 is left\n    $direction-triangle = left\n    $position-x = left\n    $distance-x = -($triangle-size)\n    $distance-x-shadow = -($triangle-size + $border-width * $sqrt2)\n  else if $pos0 right\n    $direction-triangle = right\n    $position-x = right\n    $distance-x = -($triangle-size)\n    $distance-x-shadow = -($triangle-size + $border-width * $sqrt2)\n\n  if $pos1 is left\n    $position-x = left\n    $distance-x = $side-distance\n  else if $pos1 is right\n    $position-x = right\n    $distance-x = $side-distance\n  else if $pos1 is bottom\n    $position-y = bottom\n    $distance-y = $side-distance\n  else if $pos1 is top\n    $position-y = top\n    $distance-y = $side-distance\n  else if $pos1 is center\n    if $pos0 is top or $pos0 is bottom or $pos1 is false\n      $margin-left = -($triangle-size)\n      $margin-left-shadow = -($triangle-size + $border-width * $sqrt2 / 2)\n      $position-x = left\n      $distance-x = 50%\n      $distance-x-shadow = 50%\n    else\n      $margin-top = -($triangle-size/2)\n      $margin-top-shadow = -($triangle-size/2 + $border-width * $sqrt2 / 2)\n      $position-y = top\n      $distance-y = 50%\n      $distance-y-shadow = 50%\n\n  &:before\n    margin-top: $margin-top-shadow\n    margin-left: $margin-left-shadow\n    triangle: $direction-triangle ($triangle-size + $border-width * $sqrt2) $triangle-border-color\n    absolute: $position-y $distance-y-shadow $position-x $distance-x-shadow\n    display: block\n\n  &:after\n    margin-top: $margin-top\n    margin-left: $margin-left\n    triangle: $direction-triangle $triangle-size $triangle-color\n    absolute: $position-y $distance-y $position-x $distance-x\n    display: block\n\n// Mixin: Figure\n//\n// For when you want to *semantically* show an image. Put this on your\n// <figure /> element and it will style the nested image and figcaption in a\n// wonderfully pleasing manner. Takes a color (for the thin outline), and if\n// you want, dimensions of the image as a space separated list.\n//\n// ex. figure()\n// ex. figure: blue\n// ex. figure(green, 100px 400px)\n\nfigure($color = $default-color, $dimensions = false)\n\n  if length($dimensions) > 1\n    display: block\n    size: $dimensions[0] $dimensions[1]\n  else if $dimensions == false\n    display: inline-block\n  else\n    warn(\"Make sure you pass the image's dimensions as a space-separated list\")\n\n  img\n    display: block\n    padding: 4px\n    border-radius: 3px\n    border: 1px solid rgba($color, .6)\n\n  figcaption\n    padding: 10px 0\n    text-align: center\n    italic()\n\n// Mixin: icon-arrow\n//\n// Here's an asset you've probably had to create a lot. Now you don't.\n// Creates a nice arrow icon in pure css. Useful for navigation. Takes size,\n// color, or stroke.\n\n// ex: close()\n// ex: close(25px, yellowgreen, 2px)\n\nicon-arrow($direction = 'right', $size = 40px, $color = #888, $stroke = 1px)\n  height: $size\n  width: $size\n\n  &:after\n    content: ''\n    border-right: $stroke solid $color\n    border-top: $stroke solid $color\n    display: block\n    height: unit($size * 0.625, 'px')\n    width: unit($size * 0.625, 'px')\n    margin-left: 1%\n    if $direction == 'right'\n      transform: rotate(45deg) translateX(unit($size * 0.1, 'px')) translateY(unit($size * 0.1, 'px'))\n    else if $direction == 'left'\n      transform: rotate(-135deg) translateX(unit($size * -0.3, 'px') ) translateY(unit($size * 0.1, 'px'))\n    else if $direction == 'down'\n      transform: rotate(135deg) translateX(unit($size * -0.1, 'px')) translateY(unit($size * -0.1, 'px'))\n    else if $direction == 'up'\n      transform: rotate(-45deg) translateX(unit($size * -0.1, 'px')) translateY(unit($size * 0.3, 'px'))\n\n// Mixin: icon-x\n//\n// Here's another n asset you've probably had to create a lot. Now you don't.\n// Creates a nice \"X\" close/delete icon. Takes size, color, or stroke\n\n// ex: close()\n// ex: close(25px, yellowgreen, 2px)\n\nicon-x($size = 40px, $color = #888, $stroke = 1px)\n  width: $size\n  height: $size\n  display: block\n  position: relative\n\n  &:before, &:after\n    transition: all .3s ease\n    content: ''\n    position: absolute\n    width: $size\n    top: 50%\n    height: $stroke\n    background: $color\n    transform: rotate(45deg)\n\n  &:after\n    transform: rotate(-45deg)\n\n// Mixin: Navigation\n//\n// Makes a fantastic nav bar for you that doesn't look exactly like bootstrap's\n// and you can customize it as well. Params: fixed (boolean), color (recommend\n// something dark), link color, and size, which is an integer from one up, and\n// scales every aspect of the nav bar for you. All have defaults. This mixin is\n// meant to be placed on a <nav> element that contains a ul.\n//\n// ex. nav()\n// ex. nav: 1 #444 red true\n\nnavigation($size = 1, $bg-color = #222, $link-color = #fff, $pos-fixed = false)\n  group()\n  display: block\n  z-index: 10\n  gradient: $bg-color 5%\n  box-shadow: 0 3px 3px rgba(0,0,0,.15)\n  border-bottom: 1px solid rgba(darken($bg-color, 15%),.7)\n  height: ($size + 14) * 2.866px\n  width: 100%\n  font-size: unit($size + 14, 'px')\n\n  if $pos-fixed\n    position: fixed\n  else\n    position: relative\n\n  h1\n    float: left\n    padding: ($size + 14) * .58px\n    padding-left: 17px\n    color: $link-color\n    bold()\n    font-size: ($size + 14) * 1.3px\n\n  ul\n    float: right\n    margin: 0\n    padding: ($size + 14) * .8px\n    color: $link-color\n\n    li\n      list-style-type: none\n      margin-right: 30px\n      float: left\n\n      a\n        color: $link-color\n        border: none\n        cursor: pointer\n\n        &:hover\n          color: darken($link-color, 20%)\n          border: none\n\n// Alias: nav\nnav = navigation\n\n// Additive Mixin: Flash Notices\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Super convenient flash notices. Anything with .flash on it will display as a\n// notice, and if you add the additional class .error, .warning, .notice, or\n// .success, it will display the appropriate color background for the message.\n//\n// ex. flash-notices()\n\nflash-notices()\n  .flash\n    &.error\n      flash(error)\n    &.warning\n      flash(warning)\n    &.notice\n      flash(notice)\n    &.success\n      flash(success)\n","// ----------\n// Typography\n// ----------\n\n// Alias: Bold\n// It's just faster to type bold() than font-weight: bold\n\nbold()\n  font-weight: bold\n\n// Alias: Italic\n// It's just faster to type italic() than font-style: italic\n\nitalic()\n  font-style: italic\n\n// Alias: Normal\n// Put the font-weight and style back to normal\n\nnormal()\n  font-weight: normal\n  font-style: normal\n\n// Mixin: Raquo\n//\n// Because technically raquo is not semantic, it's better to add it like this.\n//\n// ex. raquo()\n\nraquo()\n  &:after\n    content: \" \\00BB\"\n\n// Mixin: Font Face\n//\n// Super simple font-face declaration. Just give the name and the folder it\n// lives in. Make sure the font name matches the name of the files. Uses the\n// fontspring syntax:\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n//\n// ex. font-face(proxima-nova, '/fonts')\n\nfont-face($name, $folder, $weight = 'normal', $style = 'normal')\n  @font-face\n    font-family: $name\n    src: url($folder unquote('/') $name unquote('.eot') '?#iefix') format('embedded-opentype'), url($folder unquote('/') $name unquote('.woff')) format('woff'), url($folder unquote('/') $name unquote('.ttf')) format('truetype'), url($folder unquote('/') $name unquote('.eot') unquote('#') $name) format('svg');\n    font-weight: unquote($weight)\n    font-style: unquote($style)\n\n\n// Mixin: Ellipsis\n// Truncate text to the width of its container...\n// ex: ellipsis()\n// ex: ellipsis: 300px\n\nellipsis($width = 100%)\n  white-space: nowrap\n  display: inline-block\n  max-width: $width\n  overflow: hidden\n  text-overflow: ellipsis\n  word-wrap: normal\n\n// Function: Line Height\n//\n// If there is a font-size set on the parent element, adjusts the line height to\n// match that. If not, it uses the base font-size to calculate the line-height.\n\n-line-height()\n  if @font-size\n    line-height: 1.6em\n  else\n    line-height: unit($font-size*1.6, 'px')\n    line-height: 1.6rem\n\n// Mixin: Text Margin\n//\n// Puts nice visually pleasing top and bottom margins on a paragraph of text.\n// Put a font-size on your element to have it adjust accordingly.\n//\n// ex. p\n//       font-size: 18px\n//       text-margin()\n\ntext-margin($size = $font-size)\n  if @font-size\n    margin: .75em 0\n  else\n    margin: unit($font-size*.75, 'px') 0\n\n// Mixin: Paragraph\n//\n// Sets a nice size, line-height, and margins on a paragraph of text. Pass a\n// size in to customize. Toggle margins off if you don't want them.\n//\n// ex. p()\n// ex. p: 18px\n// ex. p: 14px false\n\np($size = 1rem, $margins = true)\n  font-size: $size\n  text-margin() if $margins\n  -line-height()\n  open-type-ligatures() if $ligatures\n\n// Alias: paragraph\nparagraph = p\n\n// Alias: Font Size\n// An alias for 'font-size' with auto-fallback for rem.\n// ex. fs: 16px\n// ex. fs: 1.2rem\n\nfs($size)\n  if (unit($size) == 'rem')\n    font-size: round(unit(($font-size*$size), 'px'))\n    font-size: $size\n  else\n    font-size: $size\n\n// Alias: Uppercase\n// An alias for 'text-transform: uppercase'\n// ex. uppercase()\n\nuppercase()\n  text-transform: uppercase\n\n// Alias: Upcase\nupcase = uppercase\n\n// Alias: Lowercase\n// An alias for 'text-transform: lowercase'\n// ex. lowercase()\n\nlowercase()\n  text-transform: lowercase\n\n// Alias: Downcase\ndowncase = lowercase\n\n// Alias: Reset Case\n// Gets rid of an text transform\n// ex. reset-case()\n\nreset-case()\n  text-transform: none\n\n// Mixin: Small\n//\n// Makes your text smaller and a little lighter. Great on <small /> tags.\n//\n// ex. small()\n\nsmall()\n  font-size: 55%\n  opacity: .6\n  font-weight: normal\n\n// Function: Heading\n// For internal use within headings\n\n-heading($multiplier, $margins = true)\n  font-size: unit(($font-size*$multiplier), 'px')\n  font-size: unit($multiplier, 'rem')\n  text-rendering: optimizelegibility\n  font-weight: bold\n  text-margin() if $margins\n  -line-height()\n  openTypeLigatures() if $ligatures\n\n// Mixin Set: h1, h2, h3, h4, h5, h6\n//\n// These provide nice defaults for headings based off the default font size.\n// The can scale infinitely, and work best when matched to their corresponding\n// html elements. If you'd like to change the base size of a header, just pass\n// it as an option.\n//\n// ex. h3()\n// ex. h3: 3.5\n\nh1($size=2.4)\n  -heading($size)\n\nh2($size=1.8)\n  -heading($size)\n\nh3($size=1.5)\n  -heading($size)\n\nh4($size=1.3)\n  -heading($size)\n\nh5($size=1.0)\n  -heading($size)\n\nh6($size=0.9)\n  -heading($size)\n  upcase()\n\n// Mixin: Link\n//\n// A nice default style for links. Accepts a color and a style. Color can be\n// anything, style can be underline, darken, lighten, or glow, each giving it a\n// different style of interaction when hovered. More suggestions here welcome.\n//\n// ex. link()\n// ex. link: green\n// ex. link: #57777E 'glow'\n\nlink($color = $blue, $style = 'underline')\n  color: $color\n  text-decoration: none\n  transition()\n\n  if $style == 'underline'\n    hover-underline()\n    &:hover\n      color: darken(@color, 15%)\n  else if $style == 'darken'\n    &:hover\n      color: darken(@color, 20%)\n  else if $style == 'lighten'\n    hover-lighten()\n  else if $style == 'glow'\n    &:hover\n      text-shadow: 0 0 7px rgba(@color, .6)\n\n  &:visited\n    opacity: .8\n\n// Mixin: Reset Link\n//\n// Sometimes my link mixin of the browser defaults will give you questionable\n// link defaults that you don't want on certain elements. This guy gets rid of\n// that.\n\n// ex. reset-link()\n\nreset-link()\n  border: none\n  text-decoration: none\n  color: initial\n\n  &:hover\n    border: none\n    text-decoration: none\n    color: initial\n\n  &:visited\n    opacity: 1\n\n// Mixin: Text Selection\n//\n// This guy sets the text select color intelligently based on the\n// highlight-color variable found in the settings file. If you really want, you\n// can pass it a color override too.\n\n// ex. text-selection()\n\ntext-selection($color = $highlight-color, $text-color = null)\n\n  $text-color = (light($color) ? white : #494949) unless $text-color\n\n  &::-moz-selection\n    background: $color\n    color: $text-color\n\n  &::selection\n    background: $color\n    color: $text-color\n\n// Mixin: Ul\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to disc. Use this on a ul element por favor.\n//\n// ex. ul()\n// ex. ul: 'square'\n\nul($style = 'disc')\n  margin: 5px 15px\n  margin: 0.32rem 0.94rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote($style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Ol\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to decimal. Use this on a ol element por favor.\n//\n// ex. ol()\n// ex. ol: 'upper-roman'\n\nol($style = 'decimal')\n  margin: 5px 18px\n  margin: 0.32rem 1.125rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote($style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Inline List\n//\n// For when you need your list to be horizontal. Pass it the spacing you want\n// between list elements, whatever units you'd like. Defaults to 20px.\n//\n// ex. inline-list()\n// ex. inline-list: 15px\n\ninline-list($spacing = 20px)\n  group()\n  margin: 0\n  padding: 0\n\n  li\n    float: left\n    margin-right: $spacing\n    list-style-type: none\n\n  li:last-child\n    margin-right: 0\n\n// Mixin: Reset List\n//\n// If you're tired of all the list shenanigans and want to get rid of them for\n// this special list you're working on, this is your guy. Resets the margins,\n// padding, and style.\n//\n// ex. reset-list()\n\nreset-list()\n  margin: 0\n  padding: 0\n\n  li\n    float: none\n    list-style-type: none\n    padding: 0\n    margin: 0\n\n// Mixin: Blockquote\n//\n// Nice styles for a blockquote, and even puts a nice hyphen in before your\n// citation. Use with a <p> and <cite>, <footer>, or <figcaption> inside for\n// best results. Pass a color or 'none' to set the left border.\n//\n// ex. blockquote()\n\nblockquote($color = $blue)\n  border-left: 4px solid $color\n  margin: 1em 0\n  padding-left: 1.5em\n  group()\n\n  > p\n    font-weight: 300\n    font-size: 127%\n    font-size: 1.27rem\n    line-height: 127%\n    line-height: 1.27rem\n    margin-top: 0\n\n  > cite, > footer, > figcaption\n    color: #888888\n    &:before\n      content: '\\2014'\n\n// Alias: blockquo\nblockquo = blockquote\n\n// Hyphenation\n//\n// Hyphenation is the better word-break. It’s locale aware, and inserts the\n// hyphen character at the correct place, when breaking the words. This is\n// especially important in responsive designs. It will save you from a lot of\n// ragged lines. And, no need anymore for clunky & slow Javascript hyphenation\n// fallbacks. Taken from http://www.newnet-soft.com/blog/csstypography\n//\n// ex. hyphenation()\n\nhyphenation()\n    -ms-word-break: break-all\n    word-break:     break-all\n    word-break:     break-word // webkit\n    hyphens: auto // none, auto, <number>\n    -webkit-hyphenate-before: 2\n    -webkit-hyphenate-after:  3\n    hyphenate-lines:          3\n\n// Mixin: Shadow Stroke\n//\n// Creates a text outline using text-shadow. Ported from nib.\n// Takes a color.\n//\n// ex: shadow-stroke()\n// ex: sahdow-stroke(red)\n\nshadow-stroke($color = $blue)\n  text-shadow: -1px -1px 0 $color, 1px -1px 0 $color, -1px 1px 0 $color, 1px 1px 0 $color\n\n// Additive Mixin: Base\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// This is an essential mixin. You want this on your page. Sets your font stack,\n// size, and colors based on the settings file and makes sure that your text is\n// a great looking as possible. You can override any of the params, but there is\n// really no reason to.\n//\n// ex. base()\n\nbase($fonts = $font-stack, $size = $font-size, $color = $font-color)\n  html\n    font-size: unit($size, 'px')\n    font-size: unit(($size/16)*100, \"%\")\n\n  body\n    font-family: $fonts\n    color: $color\n    -webkit-font-smoothing: antialiased\n    -webkit-text-size-adjust: 100%\n    -ms-text-size-adjust: 100%\n    font-size-adjust: auto\n\n// Additive Mixin: Headers\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' wonderful scaling header styles to your <hx> tags.\n//\n// ex. headers()\n\nheaders()\n  h1\n    h1()\n\n  h2\n    h2()\n\n  h3\n    h3()\n\n  h4\n    h4()\n\n  h5\n    h5()\n\n  h6\n    h6()\n\n// Additive Mixin: Lists\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to ul and ols.\n//\n// ex. lists()\n\nlists()\n  ul\n    ul()\n  ol\n    ol()\n\n// Additive Mixin: Bold-Italic\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds bold and italic styles to the right tags if you did a global reset.\n//\n// ex. bold-italic()\n\nbold-italic()\n  b\n    bold()\n  i\n    italic()\n  strong\n    bold()\n  em\n    italic()\n\n// Additive Mixin: Typography\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to bold and italic elements, headers, paragrapgs, small\n// text, links, lists, and blockquotes. Got all your basic elements covered.\n//\n// ex. typography()\n\ntypography()\n  bold-italic()\n  headers()\n  lists()\n  text-selection()\n\n  p\n    paragraph()\n\n  small\n    small()\n\n  a[href]:not([class])\n    link()\n\n  blockquote\n    blockquo()\n\n  .hyphenation\n    hyphenation()\n","article {\r\n    &:target {\r\n        border-left: 4px solid $blue;\r\n        border-right: 4px solid $blue;\r\n        }\r\n    img {\r\n        height: 200px;\r\n        object-fit: cover;\r\n        min-width: 100%;\r\n    }\r\n\r\n    header {\r\n        border-bottom: 1px solid $gray;\r\n        margin-bottom: 30px;\r\n        padding-bottom: 15px;\r\n    }\r\n\r\n    li {\r\n            display:inline;\r\n        }\r\n}\r\n",".sidebar {\r\n    lost-column: 3/12;\r\n    height: 100%;\r\n}\r\n\r\n.sideContent {\r\n    lost-column: 9/12;\r\n}",".flashmessage {\r\n     color: #fff;\r\n     padding: 15px;\r\n     position: fixed;\r\n     _position: absolute;\r\n     text-shadow: 0 1px 0 rgba(0,0,0,.5);\r\n     z-index 10000;\r\n     right: 0px;\r\n     bottom: 30px;\r\n}\r\n\r\n.info {\r\n     background-color: #4ea5cd;\r\n}\r\n\r\n.error {\r\n     background-color: #de4343;\r\n}\r\n     \r\n.warning {\r\n     background-color: #eaaf51;\r\n}\r\n\r\n.success {\r\n     background-color: #61b832;\r\n}\r\n\r\n.flashmessage h3 {\r\n     margin: 0 0 5px 0;                                                  \r\n}\r\n\r\n.flashmessage p {\r\n     margin: 0;                                                  \r\n}","nav {\r\n    .fa-codepen {\r\n        color: #000;\r\n    }\r\n\r\n    .fa-linkedin{\r\n        color: #0077b5;\r\n    }\r\n\r\n    .fa-github{\r\n        color: #333333;\r\n    }\r\n    .fa:hover{\r\n            transform: scale(1.5);\r\n            transition: transform .2s linear;\r\n        }\r\n}","//Axis Resets\r\nborder-box-html();\r\nglobal-reset();\r\nnormalize-css();\r\nprint-styles();\r\n//Axis Settings\r\n$default-color = $blue;\r\n$font-stack = 'Roboto Mono', monospace;\r\n$font-color = $black;\r\n//Lost Settings\r\n@lost flexbox flex;\r\n@lost gutter 15px;\r\n//Rupture Settings\r\nrupture.mobile-cutoff = 450px;\r\n//Custom Colors\r\n$bluetrans = alpha(#0074D9, 0.9);\r\n$whitetrans = alpha(#FFF,.9);\r\n$darkgray = alpha(#727272,1)\r\n//Page CSS\r\n@import 'component/body';\r\n@import 'component/navbar';\r\n@import 'component/footer';\r\n@import 'component/home';\r\n@import 'component/blog';\r\n@import 'component/sidebar';\r\n//Misc CSS\r\n@import 'component/notifications';\r\n@import 'component/fontawesome';\r\n// Fonts etc. \r\n@import url(https://fonts.googleapis.com/css?family=Roboto+Mono);"],"sourceRoot":"/source/"}